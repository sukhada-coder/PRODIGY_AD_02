import tkinter as tk
from time import time

class StopwatchApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Stopwatch")
        self.master.configure(bg="#b3d9ff")  # Set background color to light blue

        self.is_running = False
        self.start_time = None
        self.elapsed_time = 0

        self.time_text = tk.StringVar()
        self.time_text.set("00:00:00")

        # Frame for the timer display
        self.timer_frame = tk.Frame(self.master, bd=2, relief=tk.SUNKEN, bg="#b3d9ff")  # Light blue background
        self.timer_frame.pack(pady=20)

        self.time_label = tk.Label(self.timer_frame, textvariable=self.time_text, font=("Helvetica", 48), bg="#b3d9ff")
        self.time_label.pack()

        # Frame for the buttons
        self.button_frame = tk.Frame(self.master, bg="#b3d9ff")  # Light blue background
        self.button_frame.pack(pady=10)

        self.start_button = tk.Button(self.button_frame, text="Start", command=self.start_stop, width=10)
        self.start_button.grid(row=0, column=0, padx=10)

        self.reset_button = tk.Button(self.button_frame, text="Reset", command=self.reset, width=10)
        self.reset_button.grid(row=0, column=1, padx=10)

        self.update_time()

    def start_stop(self):
        if not self.is_running:
            self.is_running = True
            self.start_time = time() - self.elapsed_time
            self.start_button.config(text="Pause")
            self.update_time()
        else:
            self.is_running = False
            self.start_button.config(text="Resume")
            self.update_time()

    def reset(self):
        self.is_running = False
        self.start_time = None
        self.elapsed_time = 0
        self.start_button.config(text="Start")
        self.update_time()

    def update_time(self):
        if self.is_running:
            self.elapsed_time = time() - self.start_time

        minutes = int(self.elapsed_time // 60)
        seconds = int(self.elapsed_time % 60)
        milliseconds = int((self.elapsed_time % 1) * 1000)

        # Format milliseconds to always show as "00"
        milliseconds = "{:02d}".format(int(milliseconds))

        time_string = "{:02d}:{:02d}:{}".format(minutes, seconds, milliseconds)
        self.time_text.set(time_string)

        if self.is_running:
            self.master.after(10, self.update_time)

if __name__ == "__main__":
    root = tk.Tk()
    app = StopwatchApp(root)
    root.mainloop()
